import click

@click.command()
@click.argument('input_file', type=click.File(mode='r'))
@click.option('-f','--feed_rate', default=500, help='drilling feed rate')
def generate_drill(input_file, feed_rate):
   code_out = "./tap/" + input_file.name.split('/')[-1].split('.')[0] + "-drill.tap"
   print(code_out)
   drill_out = open(code_out,'w')
   drill_list = {}

   drill_out.write("(Project " + input_file.name.split('/')[-1] + " )\n")
   drill_out.write("(generated by iStivi python script drill+mill_genarator.py)\n")
   drill_out.write("G71 G90" + "\n") #metric, absolute coord
   drill_out.write("F" + str(feed_rate) + "\n")
   drill_out.write("G0 Z5" + "\n")


   line = input_file.readline() 
   line = input_file.readline()
   while line != "%\n":
      m_find = line.find('M')
      tool_find = line.find('T')
      print(line)
      if m_find >= 0:
         print("command")
      if tool_find >= 0:
         tool_name = line[:3]
         tool_size = line[-7:-1]
         drill_list[tool_name] = tool_size
         drill_out.write("( " + tool_name + " : " + tool_size + " )\n")
      line = input_file.readline()

   for line in input_file:
      x_start = line.find('X')
      y_start = line.find('Y')
      tool_set = line.find('T') 

      if tool_set == 0:
          drill_out.write("G0 Z25" + "\n")
          drill_out.write(line[:-1] + " M6 (" + line[:-1] + " " + drill_list[line[:-1]] + ")" + "\n")
          drill_out.write("M3\n")
      elif x_start > -1:
         x_pos = line[x_start+1:y_start]
         y_pos = line[y_start+1:]
         drill_out.write("G90 G81 G99 X" + x_pos[:-3] + "." + x_pos[-3:] + " Y" + y_pos[:-4] + "." + y_pos[-4:-1] + " Z-3 R3\n")
         

   drill_out.write("M30" + "\n")

   drill_out.close()

if __name__ == '__main__':
   generate_drill()
   
